{"version":3,"sources":["components/GoodsList.tsx","components/Buttons.tsx","api/api.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","key","id","style","color","name","Buttons","buttonsInit","title","event","type","className","onClick","getGoods","fetch","then","response","json","App","state","loading","handleAllGoods","setState","setTimeout","finally","handleFiveGoods","sort","a","b","localeCompare","slice","handleRedGoods","filter","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6OAQaA,G,MAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,4BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,EAAKE,IACZ,0BAAMC,MAAO,CAAEC,MAAOJ,EAAKI,QACxBJ,EAAKK,aCNLC,EAA2B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACzC,OACE,6BACGA,EAAYR,KAAI,gBAAGG,EAAH,EAAGA,GAAIM,EAAP,EAAOA,MAAOC,EAAd,EAAcA,MAAd,OACf,4BACEC,KAAK,SACLT,IAAKC,EACLS,UAAU,eACVC,QAAS,kBAAMH,MAEdD,QChBEK,EAAW,WACtB,OAAOC,MAAM,GAAD,OAHE,6DAGF,gBACTC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WCwFhBC,E,4MA9EbC,MAAQ,CACNrB,MAAO,GACPsB,SAAS,G,EAGXC,eAAiB,WACf,EAAKC,SAAS,CACZF,SAAS,IAEXG,YAAW,WACTV,IACGE,MAAK,SAAAjB,GAAK,OAAI,EAAKwB,SAAS,CAAExB,aAC9B0B,SAAQ,WACP,EAAKF,SAAS,CAAEF,SAAS,SAE5B,M,EAGLK,gBAAkB,WAChB,EAAKH,SAAS,CACZF,SAAS,IAEXG,YAAW,WACTV,IACGE,MAAK,SAAAjB,GACJ,EAAKwB,SAAS,CACZxB,MAAOA,EACJ4B,MAAK,SAACC,EAASC,GAAV,OAAsBD,EAAEtB,KAAKwB,cAAcD,EAAEvB,SAClDyB,MAAM,EAAG,QAGfN,SAAQ,WACP,EAAKF,SAAS,CAAEF,SAAS,SAE5B,M,EAGLW,eAAiB,WACf,EAAKT,SAAS,CACZF,SAAS,IAEXG,YAAW,WACTV,IACGE,MAAK,SAAAjB,GACJ,EAAKwB,SAAS,CAAExB,MAAOA,EAAMkC,QAAO,SAAChC,GAAD,MAA+B,QAAfA,EAAKI,cAE1DoB,SAAQ,WACP,EAAKF,SAAS,CAAEF,SAAS,SAE5B,M,uDAGK,IAAD,EACoBa,KAAKd,MAAxBrB,EADD,EACCA,MAAOsB,EADR,EACQA,QAETb,EAAwB,CAC5B,CAAEL,GAAI,EAAGM,MAAO,iBAAkBC,MAAOwB,KAAKZ,gBAC9C,CAAEnB,GAAI,EAAGM,MAAO,qBAAsBC,MAAOwB,KAAKR,iBAClD,CAAEvB,GAAI,EAAGM,MAAO,iBAAkBC,MAAOwB,KAAKF,iBAGhD,OACE,oCACE,qDACCX,EACC,yBAAKT,UAAU,gBACb,8BACA,8BACA,8BACA,+BAEA,kBAAC,EAAD,CAAWb,MAAOA,IACtB,kBAAC,EAAD,CAASS,YAAaA,S,GAzEZ2B,IAAMC,WCTxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.7caba2cf.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Good } from './TypeDefs';\n\ninterface Props {\n  goods: Good[];\n}\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li key={good.id}>\n          <span style={{ color: good.color }}>\n            {good.name}\n          </span>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\n\nimport { Button } from './TypeDefs';\n\ninterface Props {\n  buttonsInit: Button[];\n}\n\nexport const Buttons: React.FC<Props> = ({ buttonsInit }) => {\n  return (\n    <div>\n      {buttonsInit.map(({ id, title, event }) => (\n        <button\n          type=\"button\"\n          key={id}\n          className=\"good__button\"\n          onClick={() => event()}\n        >\n          {title}\n        </button>\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-goods';\n\nexport const getGoods = () => {\n  return fetch(`${API_URL}/goods.json`)\n    .then(response => response.json());\n};\n","import React from 'react';\n\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\nimport { Buttons } from './components/Buttons';\nimport { Good, Button } from './components/TypeDefs';\nimport { getGoods } from './api/api';\n\ninterface State {\n  goods: Good[];\n  loading: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: [],\n    loading: false,\n  };\n\n  handleAllGoods = () => {\n    this.setState({\n      loading: true,\n    });\n    setTimeout(() => {\n      getGoods()\n        .then(goods => this.setState({ goods }))\n        .finally(() => {\n          this.setState({ loading: false });\n        });\n    }, 1000);\n  };\n\n  handleFiveGoods = () => {\n    this.setState({\n      loading: true,\n    });\n    setTimeout(() => {\n      getGoods()\n        .then(goods => {\n          this.setState({\n            goods: goods\n              .sort((a: Good, b: Good) => a.name.localeCompare(b.name))\n              .slice(0, 5),\n          });\n        })\n        .finally(() => {\n          this.setState({ loading: false });\n        });\n    }, 1000);\n  };\n\n  handleRedGoods = () => {\n    this.setState({\n      loading: true,\n    });\n    setTimeout(() => {\n      getGoods()\n        .then(goods => {\n          this.setState({ goods: goods.filter((good: Good) => good.color === 'red') });\n        })\n        .finally(() => {\n          this.setState({ loading: false });\n        });\n    }, 1000);\n  };\n\n  render() {\n    const { goods, loading } = this.state;\n\n    const buttonsInit: Button[] = [\n      { id: 1, title: 'Load All goods', event: this.handleAllGoods },\n      { id: 2, title: 'Load 5 first goods', event: this.handleFiveGoods },\n      { id: 3, title: 'Load red goods', event: this.handleRedGoods },\n    ];\n\n    return (\n      <>\n        <h1>Dynamic list of Goods</h1>\n        {loading ? (\n          <div className=\"lds-ellipsis\">\n            <div />\n            <div />\n            <div />\n            <div />\n          </div>\n        ) : <GoodsList goods={goods} />}\n        <Buttons buttonsInit={buttonsInit} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}